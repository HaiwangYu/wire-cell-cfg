source :{
   module_type: RootInput
   //inputCommands: ["keep raw::RawDigits_*_*_*", "drop *"]
   inputCommands: ["drop *", "keep raw::RawDigits_*_*_*"]
   // raw::RawDigits_wcNoiseFilter__DataRecoStage1
   //inputCommands: ["keep *", "drop raw::ubdaqSoftwareTriggerData_*_*_*"]
   //inputCommands: ["drop raw::ubdaqSoftwareTriggerData_*_*_*"]
   saveMemoryObjectThreshold: 10485760
}
physics :{
   producers: {
      nfsp : {
         module_type : WireCellToolkit
         wcls_main: {
            # Configure Wire Cell / Larsoft integration layer
            tool_type: WCLS
            # The "apps" are the main executing components on the WCT side
            apps: ["Omnibus"]
            # Plugins are libraries of WCT components
            plugins: ["WireCellGen", "WireCellSigProc", "WireCellSio", "WireCellLarsoft"]
            # The top-level WCT configuration sequence
            configs: ["ubnfsp-after.json.bz2"]
            # Two-faced input components.  Needs to also be mentioned in WCT config.
	    # inputers: ["wclsRawFrameSource", "wclsChannelNoiseDB"]
	    # Note: need wclsChannelNoiseDB to use LS services for bad/misconfigured channels.
	    # Note: need to change uboone-nf-sp.jsonnet too
	    inputers: ["wclsRawFrameSource"]
            # Two-faced output components.  Needs to also be mentioned in WCT config.
            outputers: ["wclsCookedFrameSink"]
            # external parameters injected into the WCT configuration
            params: {
               detector: "uboone"
            }
        }
      }
   }
   
   p1        : [ nfsp ]
   trigger_paths : [ p1 ]
   
   o1 : [ out1 ]
   end_paths: [ o1 ]
}

outputs:{
   out1: {
      module_type: RootOutput
      fileName: "out5.root"
      saveMemoryObjectThreshold: 10485760 
   }
}
